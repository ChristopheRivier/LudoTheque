/*
 * def_serveur.java
 *
 * Created on 29 avril 2006, 00:32
 */

package lottaur.webmail;

import lottaur.Splash;
import lottaur.Moteur.ElementLotTaur;
import lottaur.Moteur.FiltreFichier;
import lottaur.Moteur.ParamConnect;
import lottaur.Moteur.SAXFactoryLotTaur;
import lottaur.Moteur.SaveFic;
import java.awt.EventQueue;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.util.List;
import javax.swing.Action;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;
import org.jdom.Content;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.output.Format;
import org.jdom.output.XMLOutputter;
import lottaur.ressources.Ressource;
import lottaur.webmail.model.TreeModelServeur;
import lottaur.webmail.presenter.pres_LotTaur;
import lottaur.webmail.presenter.pres_addConnect;
import lottaur.webmail.presenter.pres_def_serveur;

/**
 *
 * @author  christophe
 */
public class def_serveur extends javax.swing.JFrame {
    private Document _doc = null;
    private pres_def_serveur _presenter = null;
    /** Creates new form def_serveur */
    public def_serveur(pres_def_serveur pres) {
        _presenter = pres;
        //r�cup�ration du document
        _doc = _presenter.getDocXML();
        initComponents();
        
       //Affichage de l'icone
        ImageIcon monIcon = new ImageIcon(Ressource.class.getResource("icone.png"));
        this.setIconImage(monIcon.getImage());
        this.setTitle("LotTaur");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        ServeurConnect = new javax.swing.JTree();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        ConnectionMenu = new javax.swing.JMenu();
        RefreshConnectMenuItem = new javax.swing.JMenuItem();
        AddConnectMenuItem = new javax.swing.JMenuItem();
        DelConnectionMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        ServeurConnect.setModel(new TreeModelServeur(_doc.getRootElement()));
        ServeurConnect.setRootVisible(false);
        ServeurConnect.setShowsRootHandles(true);
        ServeurConnect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ServeurConnectMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(ServeurConnect);

        fileMenu.setText("File");
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(openMenuItem);

        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        ConnectionMenu.setText("Connection");
        RefreshConnectMenuItem.setText("Refresh Connection");
        RefreshConnectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshConnectMenuItemActionPerformed(evt);
            }
        });

        ConnectionMenu.add(RefreshConnectMenuItem);

        AddConnectMenuItem.setText("Add Connection");
        AddConnectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddConnectMenuItemActionPerformed(evt);
            }
        });

        ConnectionMenu.add(AddConnectMenuItem);

        DelConnectionMenuItem.setText("Delete Connection");
        DelConnectionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelConnectionMenuItemActionPerformed(evt);
            }
        });

        ConnectionMenu.add(DelConnectionMenuItem);

        menuBar.add(ConnectionMenu);

        helpMenu.setText("Help");
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RefreshConnectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshConnectMenuItemActionPerformed
        if( _presenter!=null )
            _presenter.MajNbMessage();
    }//GEN-LAST:event_RefreshConnectMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        JFileChooser jf = new JFileChooser(".");
        FiltreFichier filtre = new FiltreFichier(new String[]{"xml"},"fichier xml Lottaur");
        jf.setFileFilter(filtre);
        int result = jf.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selFile = jf.getSelectedFile();   
            if( selFile.exists() ){
                try {
                    _presenter.recupDocFile(selFile);
                    _doc = _presenter.getDocXML();
                    ServeurConnect.setModel(new TreeModelServeur(_doc.getRootElement()));
                    MajModelServeur();
                } catch(Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void DelConnectionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelConnectionMenuItemActionPerformed
        if( getSelectNode()!=null ){
            if( JOptionPane.showConfirmDialog( this, "Are you sure deleting this connection ?", "Delete Confirmation",  JOptionPane.OK_CANCEL_OPTION )==JOptionPane.OK_OPTION ){
                if( _presenter!=null ){
                    ElementLotTaur el = getSelectNode();
                    _presenter.DelConnect(el.getAttributeValue("name"),el.getParentElement().getAttributeValue("name"));
                }
                System.out.println("OK  : ");
            }
        }
    }//GEN-LAST:event_DelConnectionMenuItemActionPerformed
    private ElementLotTaur getSelectNode(){
        ElementLotTaur node = null;
        TreePath path = ServeurConnect.getSelectionPath();
	if( path != null ){
            Object o = path.getLastPathComponent();
            if(o instanceof ElementLotTaur){
                node = (ElementLotTaur)o;
            } 
        }
        return node;
    }
    private void ServeurConnectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ServeurConnectMouseClicked
        int nbClick = evt.getClickCount();
        TreePath path = ServeurConnect.getSelectionPath();
	if( path != null && nbClick==2 ){
	    Object o = path.getLastPathComponent();
            if(o instanceof ElementLotTaur){
                final ElementLotTaur node = (ElementLotTaur)o;
                List lst = node.getChildren();
                //pas d'�lement dans la liste c'est une feuille'
                if( lst.size()==0 ){
                    final Splash sp = new Splash(10);
                    Thread th = new Thread(sp);
                    th.start();
                    EventQueue.invokeLater( new Runnable(){
                        public void run(){
                            ParamConnect param = new ParamConnect(node.getAttributeValue("name"),node.getAttributeValue("pass"),node.getParentElement().getAttributeValue("name"));
                            Element el = _doc.getRootElement();
                           // param.setSmtp(el.getAttributeValue("value"));
                            try{
                                WebmailApp web = new WebmailApp(param);
                                web.run();
                                sp.dispose();
                                web.setVisible(true);
                            }catch(Exception ex){
                                ex.printStackTrace();
                                sp.dispose();
                            }
                        }
                    });
                }
            }
        }
    }//GEN-LAST:event_ServeurConnectMouseClicked

    private void AddConnectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddConnectMenuItemActionPerformed
        if( _presenter!=null ){
            _presenter.AddConnect();
        }
    }//GEN-LAST:event_AddConnectMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser(".");
        FiltreFichier filtre = new FiltreFichier(new String[]{"xml"},"fichier xml Lottaur");
        jf.setFileFilter(filtre);
        int result = jf.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selFile = jf.getSelectedFile();   
            if( !selFile.exists() )
            {
                   try{
                      //On utilise ici un affichage classique avec getPrettyFormat()
                      XMLOutputter sortie = new XMLOutputter(Format.getPrettyFormat());
                      //Remarquez qu'il suffit simplement de cr�er une instance de FileOutputStream
                      //avec en argument le nom du fichier pour effectuer la s�rialisation.
                      sortie.output(_doc, new FileOutputStream(selFile));
                   }catch (java.io.IOException e){}
            }
        }
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        File filesauv = new File("./lottaur.xml");
        try{
            //On utilise ici un affichage classique avec getPrettyFormat()
            XMLOutputter sortie = new XMLOutputter(Format.getPrettyFormat());
            //Remarquez qu'il suffit simplement de cr�er une instance de FileOutputStream
            //avec en argument le nom du fichier pour effectuer la s�rialisation.
            sortie.output(_doc, new FileOutputStream(filesauv));
        }catch (java.io.IOException e){}
    }//GEN-LAST:event_saveMenuItemActionPerformed
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    public void MajModelServeur() {
        ServeurConnect.updateUI();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddConnectMenuItem;
    private javax.swing.JMenu ConnectionMenu;
    private javax.swing.JMenuItem DelConnectionMenuItem;
    private javax.swing.JMenuItem RefreshConnectMenuItem;
    private javax.swing.JTree ServeurConnect;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables
    
}
